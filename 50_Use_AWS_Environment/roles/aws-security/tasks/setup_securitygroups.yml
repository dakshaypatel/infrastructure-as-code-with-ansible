---

- name: Does an VPC with the given name alredy exist
  ec2_vpc_net_facts:
    region: "{{region}}"
    filters:
      "tag:Name": "{{application_name}}-vpc"
  register: vpc_test

- name: Set informatiom from existing VPC
  set_fact:
    vpc: "{{vpc_test.vpcs[0]}}"
  when: vpc_test.vpcs != []

- name: Ensure Loadbalancer Securitygroup is available
  ec2_group:
    name: "{{application_name}}-sg-elb"
    description: "{{application_name}} security group for loadbalancer"
    vpc_id: "{{vpc.id}}"
    region: "{{region}}"
    rules:
      - proto: tcp
        from_port: 22
        to_port: 22
        cidr_ip: "{{remote_cidr_ip}}"
      - proto: tcp
        from_port: 80
        to_port: 80
        cidr_ip: "{{remote_cidr_ip}}"

- name: Ensure ECS Securitygroup is available
  ec2_group:
    name: "{{application_name}}-sg-esc"
    description: "{{application_name}} security group for Applications"
    vpc_id: "{{vpc.id}}"
    region: "{{region}}"
    rules:
      - proto: tcp
        from_port: 22
        to_port: 22
        cidr_ip: "{{remote_cidr_ip}}"
      - proto: tcp
        from_port: 31000
        to_port: 61000
        group_name: "{{application_name}}-sg-elb"
      - proto: tcp
        from_port: 31000
        to_port: 61000
        group_name: "{{application_name}}-sg-esc"
      - proto: tcp
        from_port: 8080
        to_port: 8080
        cidr_ip: "{{application_name}}-sg-elb"

- name: Ensure Database Securitygroup is available
  ec2_group:
    name: "{{application_name}}-sg-db"
    description: "{{application_name}} security group for DataBase Access"
    vpc_id: "{{vpc.id}}"
    region: "{{region}}"
    rules:
      - proto: tcp
        from_port: 3306
        to_port: 3306
        group_name: "{{application_name}}-sg-esc"


